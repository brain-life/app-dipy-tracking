#!/bin/bash
#PBS -l nodes=3:ppn=16:dc2,walltime=2:00:00
#PBS -N app-dipy-tracking
#PBS -V


#for local testing
if [ -z $SERVICE_DIR ]; then export SERVICE_DIR=`pwd`; fi
#ENV="IUHPC"

[ $PBS_O_WORKDIR ] && cd $PBS_O_WORKDIR

if [ $ENV == "IUHPC" ]; then
	if [ $HPC == "KARST" ]; then
		module unload python
		module load anaconda2
		module load freesurfer/6.0.0
	fi
	if [ $HPC == "CARBONATE" ]; then
		module load freesurfer/6.0.0
	fi
	
	export PYTHONPATH=/N/u/brlife/Karst/git/dipy:$PYTHONPATH
	export PYTHONPATH=/N/u/aryaam/Karst/github_repos/nibabel:$PYTHONPATH
fi

if [ $ENV == "VM" ]; then
	export PYTHONPATH=/usr/local/dipy:$PYTHONPATH
	export PYTHONPATH=/usr/local/nibabel:$PYTHONPATH
fi

input_nii_gz=`$SERVICE_DIR/jq -r .data_file config.json`
data_seg=`$SERVICE_DIR/jq -r .freesurfer config.json`

#data_seg={data_seg:3}
#input_nii_gz={input_nii_gz:3}
echo "converting freesurfer segments to volume"
echo mri_label2vol \
	--seg $data_seg/mri/aparc+aseg.mgz \
	--regheader $data_seg/mri/aparc+aseg.mgz \
	--temp $input_nii_gz \
	--o volume.nii.gz
mri_label2vol \
	--seg $data_seg/mri/aparc+aseg.mgz \
	--regheader $data_seg/mri/aparc+aseg.mgz \
	--temp $input_nii_gz \
	--o volume.nii.gz

echo "running main"
time python $SERVICE_DIR/main.py

ret=$?
if [ $ret -ne 0 ]; then
    echo "main.py failed"
    echo $ret > finished
    exit $ret
fi

if [ -s track.tck ];
then 
	echo 0 > finished
else 
	echo "files missing"
	echo 1 > finished
	exit 1
fi
